<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.  

@see spark.components.SkinnableContainer

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Metadata>[HostComponent("lib.component.Slider")]</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if (isNaN(getStyle("backgroundColor")))
				{
					background.visible = false;
				}
				else
				{
					background.visible = true;
					bgFill.color = getStyle("backgroundColor");
					bgFill.alpha = getStyle("backgroundAlpha");
				}
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>        
	</fx:Script>
	<fx:Declarations>
		<mx:AnimateProperty id="closeAnimate" target="{contentGroup}" property="top" fromValue="0" toValue="{-contentGroup.height}" duration="300"/>
	</fx:Declarations>
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
		<s:State name="show" />
	</s:states>
	<s:transitions>
		<s:Transition fromState="normal" toState="show"  >
			<s:Sequence effectEnd="{hostComponent.dispatchEvent(new Event('afterOpen'))}">
				<s:AddAction target="{contentGroup}" />
				<mx:AnimateProperty target="{contentGroup}" property="top" fromValue="{-contentGroup.height}" toValue="0" duration="300"/>
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	<!--- Defines the appearance of the SkinnableContainer class's background. -->
	<s:Rect id="background" left="0" right="0" top="0" bottom="0" alpha="0.5">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	
	<!--
	Note: setting the minimum size to 0 here so that changes to the host component's
	size will not be thwarted by this skin part's minimum size.   This is a compromise,
	more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
	-->
	<!--- @copy spark.components.SkinnableContainer#contentGroup -->
	<s:Group top="0" left="0" right="0" bottom="0" clipAndEnableScrolling="true">
		<s:Group width="100%" height="100%" includeIn="show" showEffect="Fade" hideEffect="Fade" click="{hostComponent.dispatchEvent(new Event('clickedOutsideContent'))}">
			<s:Rect width="100%" height="100%" >
				<s:fill>
					<s:SolidColor color="#CCCCCC" alpha="0.1"/>
				</s:fill>
			</s:Rect>	
		</s:Group>
		<s:Group id="contentGroup" horizontalCenter="0" minWidth="0" minHeight="0" includeIn="show">
			<s:filters>
				<s:DropShadowFilter alpha="0.1" angle="90" blurX="20" blurY="20" strength="0.5"/>
			</s:filters>
			<s:layout>
				<s:BasicLayout/>
			</s:layout>
		</s:Group>
	</s:Group>
	
</s:Skin>
